// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CheckpointCreation extends ethereum.Event {
  get params(): CheckpointCreation__Params {
    return new CheckpointCreation__Params(this);
  }
}

export class CheckpointCreation__Params {
  _event: CheckpointCreation;

  constructor(event: CheckpointCreation) {
    this._event = event;
  }

  get gameID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get checkpointAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get maxSupply(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GameRegistration extends ethereum.Event {
  get params(): GameRegistration__Params {
    return new GameRegistration__Params(this);
  }
}

export class GameRegistration__Params {
  _event: GameRegistration;

  constructor(event: GameRegistration) {
    this._event = event;
  }

  get gameOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get gameName(): string {
    return this._event.parameters[1].value.toString();
  }

  get gameID(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  gameCheckpoints(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "gameCheckpoints",
      "gameCheckpoints(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_gameCheckpoints(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gameCheckpoints",
      "gameCheckpoints(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gameNames(param0: BigInt): string {
    let result = super.call("gameNames", "gameNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toString();
  }

  try_gameNames(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("gameNames", "gameNames(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  gameOwners(param0: BigInt): Address {
    let result = super.call("gameOwners", "gameOwners(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_gameOwners(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("gameOwners", "gameOwners(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _minimumSURF(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _surf(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeMinSURFCall extends ethereum.Call {
  get inputs(): ChangeMinSURFCall__Inputs {
    return new ChangeMinSURFCall__Inputs(this);
  }

  get outputs(): ChangeMinSURFCall__Outputs {
    return new ChangeMinSURFCall__Outputs(this);
  }
}

export class ChangeMinSURFCall__Inputs {
  _call: ChangeMinSURFCall;

  constructor(call: ChangeMinSURFCall) {
    this._call = call;
  }

  get _minSURF(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ChangeMinSURFCall__Outputs {
  _call: ChangeMinSURFCall;

  constructor(call: ChangeMinSURFCall) {
    this._call = call;
  }
}

export class CreateCheckpointCall extends ethereum.Call {
  get inputs(): CreateCheckpointCall__Inputs {
    return new CreateCheckpointCall__Inputs(this);
  }

  get outputs(): CreateCheckpointCall__Outputs {
    return new CreateCheckpointCall__Outputs(this);
  }
}

export class CreateCheckpointCall__Inputs {
  _call: CreateCheckpointCall;

  constructor(call: CreateCheckpointCall) {
    this._call = call;
  }

  get gameId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxSupply(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get mintingPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class CreateCheckpointCall__Outputs {
  _call: CreateCheckpointCall;

  constructor(call: CreateCheckpointCall) {
    this._call = call;
  }
}

export class RegisterGameWithSURFCall extends ethereum.Call {
  get inputs(): RegisterGameWithSURFCall__Inputs {
    return new RegisterGameWithSURFCall__Inputs(this);
  }

  get outputs(): RegisterGameWithSURFCall__Outputs {
    return new RegisterGameWithSURFCall__Outputs(this);
  }
}

export class RegisterGameWithSURFCall__Inputs {
  _call: RegisterGameWithSURFCall;

  constructor(call: RegisterGameWithSURFCall) {
    this._call = call;
  }

  get game(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterGameWithSURFCall__Outputs {
  _call: RegisterGameWithSURFCall;

  constructor(call: RegisterGameWithSURFCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
